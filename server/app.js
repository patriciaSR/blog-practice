const express = require('express');
const cors = require('cors');
const fs = require('fs');
const https = require('https');

// passport authentication
const passport = require('passport');

const repository = require('./repository/');

// routers
const postsRouter = require('./controllers/postsRouter');
const commentsRouter = require('./controllers/commentsRouter');
const offensiveRouter = require('./controllers/offensiveRouter');
const authRouter = require('./controllers/authRouter');
const signupRouter = require('./controllers/signupRouter');


const app = express();
// Enable CORS
app.use(cors());
// Convert json bodies to JavaScript object
app.use(express.json());

// passport authentication
app.use(passport.initialize());

// routes
app.use('/login', authRouter);
app.use('/signup', signupRouter);
app.use('/posts', postsRouter);
app.use('/posts/:id/comments', commentsRouter);
app.use('/offensive-words', passport.authenticate('jwt', { session: false }), offensiveRouter);


async function main() {
  await repository.connect();
  
  await repository.checkDefault();
}

main();

// to create a new autogenerated false safe certificate
// openssl req -nodes -new -x509 -keyout server.key -out server.cert
https.createServer({
  key: fs.readFileSync('server.key'),
  cert: fs.readFileSync('server.cert'),
}, app).listen(3443, () => {
  console.log('Https server started in port 3443');
});